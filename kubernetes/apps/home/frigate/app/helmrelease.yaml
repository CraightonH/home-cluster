---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      fullnameOverride: *app

    defaultPodOptions:
      annotations:
        reloader.stakater.com/auto: "true"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
    controllers:
      main:
        strategy: Recreate
        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.13.2
            env:
              TZ: America/Denver

    service:
      main:
        controller: main
        nameOverride: "{{ .Values.global.fullnameOverride }}"
        ports:
          http:
            port: 5000

    ingress:
      main:
        enabled: true
        className: internal
        nameOverride: "{{ .Values.global.fullnameOverride }}"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: "frigate.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
        tls:
          - hosts:
              - "frigate.${SECRET_DOMAIN}"
            secretName: "frigate-tls"

    configMaps:
      config:
        enabled: true
        data:
          config.yml: |
            # go2rtc:
            #   streams:
            #     back:
            #       - rtsp://user:password@10.0.10.10:554/cam/realmonitor?channel=1&subtype=2
            mqtt:
              enabled: False
              host: mqtt
            # objects:
            #   track:
            #     - person
            # ffmpeg:
            #   output_args:
            #     record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -c copy -c:a aac
            # record:
            #   enabled: True
            #   retain:
            #     days: 5
            # snapshots:
            #   enabled: True
            #   timestamp: False
            #   bounding_box: True
            #   height: 450
            #   retain:
            #     default: 5
            cameras:
              downstairs:
                enabled: False
                ffmpeg:
                  inputs:
                    - path: ${SECRET_CAMERA_CONNECTION_DOWNSTAIRS}
                      roles:
                        - detect
                        - record
                detect:
                  height: 1080
                  width: 1920
                # motion:
                  # mask:
                    # - 1373,1080,1371,1005,1870,1005,1870,1080
              cayderoom:
                enabled: False
                ffmpeg:
                  inputs:
                    - path: ${SECRET_CAMERA_CONNECTION_CAYDEROOM}
                      roles:
                        - detect
                        - record
                detect:
                  height: 1080
                  width: 1920
                # motion:
                  # mask:
                    # - 1373,1080,1371,1005,1870,1005,1870,1080
            database:
              path: /media/frigate.db
            # detectors:
            #   cpu1:
            #     type: cpu

    persistence:
      media:
        # In case of db corruption, shutdown frigate, mount this volume to workstation and run following command
        # echo '.dump' | sqlite3 frigate.db | sqlite3 repaired_frigate.db
        enabled: true
        type: nfs
        server: ${SECRET_NAS_ADDRESS}
        path: /volume10/nvr
        advancedMounts:
          main:
            main:
              - path: /media
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 1Gi
        advancedMounts:
          main:
            main:
              - path: /dev/shm
