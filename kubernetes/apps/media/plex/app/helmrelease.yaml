apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    global:
      fullnameOverride: *app

    defaultPodOptions:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64

    controllers:
      main:
        containers:
          main:
            image:
              repository: plexinc/pms-docker
              tag: 1.41.0.8994-f2c27da23
            env:
              TZ: America/Denver
              ALLOWED_NETWORKS: 192.168.1.0/255.255.255.0
              HOSTNAME: HancockPlex
            probes:
              liveness: &probes
                type: HTTP
                port: &port 32400
                path: /web/index.html
              readiness: *probes
              startup: *probes
      # TODO: Add git init container to install plex plugins
      # Pull git repo if exists or clone if it doesn't
      # Audiobook agent: `git -C "/config/Library/Application Support/Plex Media Server/Plug-ins" pull || git clone https://github.com/djdembeck/Audnexus.bundle.git "/config/Library/Application Support/Plex Media Server/Plug-ins`"

    service:
      main:
        controller: main
        nameOverride: "{{ .Values.global.fullnameOverride }}"
        type: NodePort
        ports:
          http:
            port: *port
            nodePort: *port

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: plex.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
        tls:
          - hosts:
              - plex.${SECRET_DOMAIN}
            secretName: plex-tls

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${SECRET_NAS_ADDRESS}
        path: /volume1/Media/plex
        advancedMounts:
          main:
            main:
              - path: /data
                readOnly: false
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        size: 20Gi
        accessMode: ReadWriteOnce
        advancedMounts:
          main:
            main:
              - path: /config
                readOnly: false
