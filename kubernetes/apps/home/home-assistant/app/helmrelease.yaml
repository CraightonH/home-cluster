---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: ingress-nginx-external
      namespace: network
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      securityContext:
        runAsUser: 0

    global:
      fullnameOverride: home-assistant

    controllers:
      home-assistant:
        replicas: 1
        strategy: Recreate
        containers:
          home-assistant:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2024.7.1
            env:
              TZ: America/Denver
            probes:
              liveness: &haprobes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /manifest.json
                    port: &haport 8123
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *haprobes
          codeserver:
            image:
              repository: codercom/code-server
              tag: 4.90.3
            env:
              TZ: America/Denver
            workingDir: /config
            args:
              - --user-data-dir
              - "/config/.vscode"
              - --auth
              - "none"
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                cpu: 500m
                memory: 500Mi
            probes:
              liveness: &codeprobes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &codeport 8080
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *codeprobes

    service:
      home-assistant:
        controller: home-assistant
        nameOverride: "{{ .Values.global.fullnameOverride }}"
        ports:
          home-assistant:
            port: *haport
      codeserver:
        controller: home-assistant
        nameOverride: code-server
        ports:
          codeserver:
            port: *codeport

    ingress:
      home-assistant-external:
        enabled: true
        className: external
        nameOverride: home-assistant
        annotations:
          # cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600" # 1 hour
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600" # 1 hour
          nginx.ingress.kubernetes.io/server-snippets: | # allow websockets
            location / {
              proxysetheader Upgrade $httpupgrade;
              proxyhttpversion 1.1;
              proxysetheader X-Forwarded-Host $httphost;
              proxysetheader X-Forwarded-Proto $scheme;
              proxysetheader X-Forwarded-For $proxy_add_x_forwarded_for;
              proxysetheader Host $host;
              proxysetheader Connection "upgrade";
              proxycachebypass $httpupgrade;
            }
        hosts:
          - host: home.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: home-assistant
        tls:
          - hosts:
              - home.${SECRET_DOMAIN}
            secretName: home-assistant-tls
      codeserver-external:
        enabled: true
        className: external
        nameOverride: codeserver
        annotations:
          # cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: haconfig.${SECRET_DOMAIN}
            paths:
            - path: /
              service:
                identifier: codeserver
        tls:
          - hosts:
              - haconfig.${SECRET_DOMAIN}
            secretName: haconfig-tls

    persistence:
      config:
        enabled: true
        type: nfs
        server: ${SECRET_NAS_ADDRESS}
        path: /volume6/home-assistant-config
        globalMounts:
          - path: /config
      media:
        enabled: false
        existingClaim: nvr-media-pvc
        advancedMounts:
          home-assistant:
            home-assistant:
              - path: /mnt/media/nvr

    serviceAccount:
      create: false
