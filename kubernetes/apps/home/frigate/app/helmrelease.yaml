---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 8.2.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home # TODO: migrate to bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    image:
      repository: blakeblackshear/frigate
      tag: 0.11.1
      pullPolicy: IfNotPresent
    replicaCount: 0
    strategy:
      type: Recreate
    podAnnotations:
      reloader.stakater.com/auto: "true"

    env:
      TZ: "America/Denver"

    service:
      main:
        ports:
          http:
            enabled: true
            nodePort: 31934
          rtmp:
            enabled: true
            nodePort: 31935

    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: "frigate.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "frigate.${SECRET_DOMAIN}"
            secretName: "frigate-tls"

    configmap:
      config:
        enabled: true
        data:
          config.yml: |
            mqtt:
              host: mqtt
            objects:
              track:
                - person
            ffmpeg:
              output_args:
                record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -c copy -c:a aac
            record:
              enabled: True
              retain:
                days: 5
            snapshots:
              enabled: True
              timestamp: False
              bounding_box: True
              height: 450
              retain:
                default: 5
            rtmp:
              enabled: True
            cameras:
              downstairs:
                ffmpeg:
                  inputs:
                    - path: ${SECRET_CAMERA_CONNECTION_DOWNSTAIRS}
                      roles:
                        - detect
                        - record
                detect:
                  height: 1080
                  width: 1920
                # motion:
                  # mask:
                    # - 1373,1080,1371,1005,1870,1005,1870,1080
              cayderoom:
                ffmpeg:
                  inputs:
                    - path: ${SECRET_CAMERA_CONNECTION_CAYDEROOM}
                      roles:
                        - detect
                        - record
                detect:
                  height: 1080
                  width: 1920
                # motion:
                  # mask:
                    # - 1373,1080,1371,1005,1870,1005,1870,1080
            database:
              path: /media/frigate.db
            detectors:
              cpu1:
                type: cpu

    persistence:
      media:
        # In case of db corruption, shutdown frigate, mount this volume to workstation and run following command
        # echo '.dump' | sqlite3 frigate.db | sqlite3 repaired_frigate.db
        enabled: true
        type: nfs
        server: ${SECRET_NAS_ADDRESS}
        path: /volume10/nvr
        mountPath: /media
      # -- Configure a temporary cache. See [docs](https://blakeblackshear.github.io/frigate/) for more details..
      # @default -- See values.yaml
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 1Gi
        mountPath: /dev/shm

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
